<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hiveview.dao.INeedDao" >
  <resultMap id="BaseResultMap" type="com.hiveview.entity.Need" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="member_id" property="memberId" jdbcType="BIGINT" />
    <result column="company_id" property="companyId" jdbcType="BIGINT" />
    <result column="attribute" property="attribute" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="TINYINT" />
    <result column="hits" property="hits" jdbcType="INTEGER" />
    <result column="confine_status" property="confineStatus" jdbcType="TINYINT" />
    <result column="class_id" property="classId" jdbcType="BIGINT" />
    <result column="timing_status" property="timingStatus" jdbcType="TINYINT" />
    <result column="charge_type" property="chargeType" jdbcType="TINYINT" />
    <result column="source" property="source" jdbcType="TINYINT" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="need_mobile" property="needMobile" jdbcType="VARCHAR" />
    <result column="add_time" property="addTime" jdbcType="TIMESTAMP" />
    <result column="end_time" property="endTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="className" property="className" jdbcType="VARCHAR" />
    <result column="areaFullName" property="areaFullName" jdbcType="VARCHAR" />
    <association property="member" javaType="com.hiveview.entity.Member">
      <result column="memberName" property="name" jdbcType="VARCHAR" />
      <result column="mobile" property="mobile" jdbcType="VARCHAR" />
      <result column="address" property="address" jdbcType="VARCHAR" />
    </association>
    <collection property="attributes" ofType="com.hiveview.entity.Attribute">
        <result column="attrName" property="name" jdbcType="VARCHAR" />
        <result column="attrValue" property="value" jdbcType="VARCHAR" />
    </collection>
  </resultMap>
  <sql id="Base_Column_List" >
    id, title, content, member_id, company_id, attribute, status, hits, confine_status, 
    class_id, timing_status, type, add_time, update_time,end_time,need_mobile
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap"  >
        SELECT
          n.id,
          n.title,
          n.content,
          n.member_id,
          n.company_id,
          n.attribute,
          n.status,
          n.class_id,
          n.add_time,
          n.update_time,
          n.hits,
          n.end_time,
          n.need_mobile,
          m.name as memberName,
          m.mobile,
          m.address
        FROM j_need n LEFT JOIN  j_member m on m.id = n.member_id
    where n.id = #{needId,jdbcType=BIGINT} and n.member_id = #{memberId}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from j_need
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.hiveview.entity.Need" useGeneratedKeys="true" keyProperty="id">
    insert into j_need (id, title, content, 
      member_id, company_id, attribute, 
      status, hits, confine_status, 
      class_id, timing_status, type, 
      add_time, update_time,end_time,need_mobile)
    values (#{id,jdbcType=BIGINT}, #{title,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, 
      #{memberId,jdbcType=BIGINT}, #{companyId,jdbcType=BIGINT}, #{attribute,jdbcType=VARCHAR}, 
      #{status,jdbcType=TINYINT}, #{hits,jdbcType=INTEGER}, #{confineStatus,jdbcType=TINYINT}, 
      #{classId,jdbcType=BIGINT}, #{timingStatus,jdbcType=TINYINT}, #{type,jdbcType=VARCHAR}, 
      #{addTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP},#{needMobile,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.hiveview.entity.Need" >
    insert into j_need
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="memberId != null" >
        member_id,
      </if>
      <if test="companyId != null" >
        company_id,
      </if>
      <if test="attribute != null" >
        attribute,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="hits != null" >
        hits,
      </if>
      <if test="confineStatus != null" >
        confine_status,
      </if>
      <if test="classId != null" >
        class_id,
      </if>
      <if test="timingStatus != null" >
        timing_status,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="addTime != null" >
        add_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="memberId != null" >
        #{memberId,jdbcType=BIGINT},
      </if>
      <if test="companyId != null" >
        #{companyId,jdbcType=BIGINT},
      </if>
      <if test="attribute != null" >
        #{attribute,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=TINYINT},
      </if>
      <if test="hits != null" >
        #{hits,jdbcType=INTEGER},
      </if>
      <if test="confineStatus != null" >
        #{confineStatus,jdbcType=TINYINT},
      </if>
      <if test="classId != null" >
        #{classId,jdbcType=BIGINT},
      </if>
      <if test="timingStatus != null" >
        #{timingStatus,jdbcType=TINYINT},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="addTime != null" >
        #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hiveview.entity.Need" >
    update j_need
    <set >
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="needMobile != null" >
        need_mobile = #{needMobile,jdbcType=VARCHAR},
      </if>
      <if test="memberId != null" >
        member_id = #{memberId,jdbcType=BIGINT},
      </if>
      <if test="companyId != null" >
        company_id = #{companyId,jdbcType=BIGINT},
      </if>
      <if test="attribute != null" >
        attribute = #{attribute,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="chargeType != null" >
        charge_type = #{chargeType,jdbcType=TINYINT},
      </if>
      <if test="hits != null" >
        hits = #{hits,jdbcType=INTEGER},
      </if>
      <if test="confineStatus != null" >
        confine_status = #{confineStatus,jdbcType=TINYINT},
      </if>
      <if test="classId != null" >
        class_id = #{classId,jdbcType=BIGINT},
      </if>
      <if test="timingStatus != null" >
        timing_status = #{timingStatus,jdbcType=TINYINT},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="addTime != null" >
        add_time = #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hiveview.entity.Need" >
    update j_need
    set title = #{title,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      member_id = #{memberId,jdbcType=BIGINT},
      company_id = #{companyId,jdbcType=BIGINT},
      attribute = #{attribute,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT},
      hits = #{hits,jdbcType=INTEGER},
      confine_status = #{confineStatus,jdbcType=TINYINT},
      class_id = #{classId,jdbcType=BIGINT},
      timing_status = #{timingStatus,jdbcType=TINYINT},
      type = #{type,jdbcType=VARCHAR},
      add_time = #{addTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="addHitsByNid" parameterType="long" >
    UPDATE j_need
     SET hits = hits+1
    where id = #{id,jdbcType=BIGINT}
  </update>

    <select id="getNeed" resultMap="BaseResultMap" parameterType="com.hiveview.entity.Need" >
        SELECT
          n.id,
          n.title,
          n.content,
          n.member_id,
          n.company_id,
          n.attribute,
          n.status,
          n.class_id,
          n.add_time,
          n.update_time,
          n.need_mobile,
          n.charge_type,
          c.name as className,
          m.mobile
        FROM j_need n LEFT JOIN j_class c ON n.class_id = c.id
                      LEFT JOIN  j_member m on m.id = n.member_id
        <where>
            <if test="memberId != null" >
                n.member_id = #{memberId,jdbcType=BIGINT}
            </if>
            <if test="status != null" >
             AND  n.status = #{status,jdbcType=TINYINT}
            </if>
            <if test="title != null and title != ''" >
             AND  title like CONCAT('%',#{title},'%')
            </if>
          AND  n.status != 2 order by n.add_time desc
        </where>
    </select>
    <select id="getOpenNeed" resultMap="BaseResultMap" parameterType="com.hiveview.entity.Need" >
        SELECT
          n.id,
          n.title,
          n.content,
          n.member_id,
          n.company_id,
          n.attribute,
          n.status,
          n.class_id,
          n.add_time,
          n.update_time,
          n.hits,
          n.end_time,
          n.need_mobile,
          n.charge_type,
          c.name as className,
          m.name as memberName,
          m.mobile,
          m.address,
          a.full_name as areaFullName
        FROM j_need n LEFT JOIN j_class c ON n.class_id = c.id
                      LEFT JOIN  j_member m on m.id = n.member_id
                      LEFT JOIN  j_area a on a.code = m.area_code
        <where>
            <if test="memberId != null" >
                member_id = #{memberId,jdbcType=BIGINT}
            </if>
            <if test="status != null" >
             AND  n.status = #{status,jdbcType=TINYINT}
            </if>
            <if test="title != null and title != ''" >
             AND  title like CONCAT('%',#{title},'%')
            </if>
            <if test="id != null and id != ''" >
             AND  n.id =  #{id}
            </if>
            <if test="areaCode != null and areaCode != ''" >
             AND  m.area_code like  CONCAT(#{areaCode},'%')
            </if>
            <if test="classCode != null and classCode != ''" >
             AND  c.code  like  CONCAT(#{classCode},'%')
            </if>
        </where>
    </select>
    <select id="getNeedDetail" resultMap="BaseResultMap" parameterType="com.hiveview.entity.Need" >
        SELECT
          n.id,
          n.title,
          n.content,
          n.member_id,
          n.company_id,
          n.attribute,
          n.status,
          n.class_id,
          n.add_time,
          n.update_time,
          n.hits,
          n.end_time,
          n.need_mobile,
          n.charge_type,
          c.name as className,
          m.name as memberName,
          m.mobile,
          m.address,
          a.name as attrName,
          a.value as attrValue,
          a1.full_name as areaFullName
        FROM j_need n LEFT JOIN j_class c ON n.class_id = c.id
                      LEFT JOIN  j_member m on m.id = n.member_id
                      LEFT JOIN  j_need_attribute a on a.need_id = n.id
                      LEFT JOIN  j_area a1 on a1.code = m.area_code
        <where>
            <if test="memberId != null" >
                member_id = #{memberId,jdbcType=BIGINT}
            </if>
            <if test="status != null" >
             AND  n.status = #{status,jdbcType=TINYINT}
            </if>
            <if test="title != null and title != ''" >
             AND  title like CONCAT('%',#{title},'%')
            </if>
            <if test="id != null and id != ''" >
             AND  n.id =  #{id}
            </if>
        </where>
    </select>

</mapper>