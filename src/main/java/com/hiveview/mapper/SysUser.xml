<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="com.hiveview.dao.IMemberDao">

	<sql id="table">
		sys_user
	</sql>

	<select id="verifyPhoneRegister" parameterType="String"  resultType="Integer">
		SELECT count(1)
		FROM j_member WHERE mobile = #{phone};
	</select>


	<select id="getSysUserById" parameterType="java.lang.Integer"  resultType="com.hiveview.entity.Member">
 		<![CDATA[
			SELECT sys_user_id, user_name, user_pwd, user_mail, role_id, created_time, created_by, updated_time, updated_by, is_effective  FROM sys_user WHERE sys_user_id=#{userId}
		]]>
 	</select>
 	
 	<select id="getLoginInfo" parameterType="com.hiveview.entity.Member" resultType="com.hiveview.entity.Member">
 		SELECT sys_user_id AS userId, user_name AS userName, user_pwd AS userPwd, user_mail AS userMail, role_id AS roleId, created_time AS createdTime, created_by AS createdBy, updated_time AS updatedTime, updated_by AS updatedBy 
		FROM <include refid="table"/>
		WHERE is_effective=1 AND user_mail=#{userMail,jdbcType=VARCHAR} AND user_pwd = #{userPwd,jdbcType=VARCHAR}
 	</select>


	<select id="getSysUserByAll" parameterType="map"  resultType="com.hiveview.entity.Member">
 		<![CDATA[
			SELECT sys_user_id, user_name, user_pwd, user_mail, role_id, created_time, created_by, updated_time, updated_by, is_effective  FROM sys_user LIMIT #{currentPage},#{pageSize}
		]]>
 	</select>
 	
  	<update id="updateSysUser" parameterType="com.hiveview.entity.Member" >
  	  UPDATE sys_user 
<set>
  	  <if test="userName!=null">
  	  	user_name = #{userName,jdbcType=VARCHAR},
  	  </if>
  	  
  	  <if test="userPwd!=null">
  	  	user_pwd = #{userPwd,jdbcType=VARCHAR},
  	  </if>
  	  <if test="userMail!=null">
  	  	 user_mail = #{userMail,jdbcType=VARCHAR},
  	  </if>
  	  <if test="roleId!=null">
  	  	 role_id=#{roleId,jdbcType=INTEGER},
  	  </if>  	  
  	  <if test="updatedTime!=null">
  	  	updated_time = #{updatedTime,jdbcType=TIMESTAMP},
  	  </if>
  	  <if test="updatedBy!=null">
  	  	updated_by = #{updatedBy,jdbcType=INTEGER},
  	  </if>
  	  <if test="isEffective!=null">
  	  	is_effective = #{isEffective,jdbcType=TIMESTAMP}
  	  </if>
</set>
  	   WHERE sys_user_id=#{userId,jdbcType=INTEGER}
	</update>

	<insert id="addSysUser" parameterType="com.hiveview.entity.Member">
		<selectKey resultType="java.lang.Integer" keyProperty="adminId"
			order="AFTER">
			SELECT LAST_INSERT_ID() as id from sys_user order by sys_user_id limit 1
		</selectKey>
	INSERT INTO sys_user
	(user_name,user_pwd,user_mail,role_id,created_time,created_by,updated_time,updated_by,is_effective)
	VALUES
	(#{userName,jdbcType=VARCHAR},#{userPwd,jdbcType=VARCHAR},#{userMail,jdbcType=VARCHAR},#{roleId,jdbcType=INTEGER},#{createdTime,jdbcType=TIMESTAMP},#{createdBy,jdbcType=INTEGER},#{updatedTime,jdbcType=TIMESTAMP},0,#{isEffective,jdbcType=INTEGER})
	</insert>

	<delete id="deleteSysUserById" parameterType="int">
		DELETE FROM sys_user WHERE sys_user_id = #{sysUserId}
	</delete>
	
  	<select id="getCount" parameterType="com.hiveview.entity.Member" resultType="INTEGER">
		SELECT COUNT(*) FROM sys_user WHERE 1=1
		<if test="userName!=null">
			AND user_name = #{userName,jdbcType=VARCHAR}
		</if>
		<if test="userMail!=null">
			AND user_mail = #{userMail,jdbcType=VARCHAR}
		</if>
 	</select>
 	<select id="getUserList" parameterType="map" resultType="com.hiveview.entity.Member">
 		SELECT sys_user_id userId,user_name userName,user_pwd userPwd,
 				user_mail userMail,role_id roleId,created_time createdTime,
 				created_by createdBy,updated_time updatedTime,updated_by updatedBy,
 				is_effective isEffective
 		FROM sys_user
 		LIMIT #{pageIndex},#{pageSize}
 	</select>
</mapper>